name: Build and Deploy Engine to Itch.io

on:
  push:
    branches: [ main ]

jobs:

  # 1. LINUX BUILD JOB

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Dependencies (Linux)
        run: sudo apt-get update && sudo apt-get install -y build-essential libgl-dev

      - name: Configure and Build (Linux)
        run: |
          set -euo pipefail
          mkdir -p dist/linux

          # If this repo uses CMake, configure and build a Release binary.
          if [ -f CMakeLists.txt ]; then
            cmake -S . -B build_linux -DCMAKE_BUILD_TYPE=Release
            cmake --build build_linux -- -j$(nproc)
          fi

          # Try to find the binary in common places (handles build/bin, Release, nested paths and spaces)
          BIN=$(find build_linux build -type f -name 'OpenGL-3D-Engine' -perm /111 2>/dev/null | head -n1 || true)
          if [ -z "$BIN" ]; then
            BIN=$(find . -type f -path '*/Release/OpenGL-3D-Engine*' -perm /111 2>/dev/null | head -n1 || true)
          fi
          if [ -z "$BIN" ]; then
            # search workspace to catch nested directories or unusual layouts (quotes handle spaces)
            BIN=$(find "$GITHUB_WORKSPACE" -type f -name 'OpenGL-3D-Engine' -perm /111 2>/dev/null | head -n1 || true)
          fi

          if [ -z "$BIN" ]; then
            echo "ERROR: Could not find built binary 'OpenGL-3D-Engine'." >&2
            echo "Searched: build_linux/, build/, */Release/, and the repository workspace." >&2
            exit 1
          fi

          echo "Found binary at: $BIN"
          cp "$BIN" dist/linux/
          cp -r assets shaders dist/linux/
          
      - name: Push to itch.io (Linux)
        uses: manleydev/butler-publish-itchio-action@v1.0.3
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          ITCH_USER: mu-gua-here
          ITCH_GAME: opengl-3d-engine-demo
          PACKAGE: dist/linux
          CHANNEL: linux
          VERSION: ${{ github.ref_name }}-${{ github.sha }}


  # 2. WINDOWS BUILD JOB

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
            
      - name: Build (Windows) - optional
        shell: pwsh
        run: |
          # If you use CMake on Windows, build the Release configuration
          if (Test-Path CMakeLists.txt) {
            cmake -S . -B build_windows -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release
            cmake --build build_windows --config Release
          }

      - name: Package Windows Build
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist/windows

          EXE=$(find build_windows -type f -name 'OpenGL-3D-Engine.exe' 2>/dev/null | head -n1 || true)
          if [ -z "$EXE" ]; then
            EXE=$(find . -type f -path '*/Release/OpenGL-3D-Engine.exe' 2>/dev/null | head -n1 || true)
          fi
          if [ -z "$EXE" ]; then
            EXE=$(find "$GITHUB_WORKSPACE" -type f -name 'OpenGL-3D-Engine.exe' 2>/dev/null | head -n1 || true)
          fi

          if [ -z "$EXE" ]; then
            echo "ERROR: Could not find OpenGL-3D-Engine.exe" >&2
            exit 1
          fi

          echo "Found exe at: $EXE"
          cp "$EXE" dist/windows/
          cp -r assets shaders dist/windows/
          
      - name: Push to itch.io (Windows)
        uses: manleydev/butler-publish-itchio-action@v1.0.3
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          ITCH_USER: mu-gua-here
          ITCH_GAME: opengl-3d-engine-demo
          PACKAGE: dist/windows
          CHANNEL: windows
          VERSION: ${{ github.ref_name }}-${{ github.sha }}


  # 3. MACOS BUILD JOB

  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure and Build (macOS)
        run: |
          cmake -B build_macos -G Xcode -DCMAKE_BUILD_TYPE=Release .
          cmake --build build_macos --config Release
        
      - name: Package macOS Build
        run: |
          mkdir -p dist/macos
          BIN=$(find build_macos -type f -name 'OpenGL-3D-Engine' 2>/dev/null | head -n1 || true)
          if [ -z "$BIN" ]; then
            BIN=$(find . -type f -path '*/Release/OpenGL-3D-Engine*' 2>/dev/null | head -n1 || true)
          fi
          if [ -z "$BIN" ]; then
            echo "ERROR: Could not find macOS binary" >&2
            exit 1
          fi
          cp "$BIN" dist/macos/
          cp -r assets shaders dist/macos/
          
      - name: Push to itch.io (macOS)
        run: |
          butler push dist/macos mu-gua-here/opengl-3d-engine-demo:osx \
            --userversion ${{ github.ref_name }}-${{ github.sha }}
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}