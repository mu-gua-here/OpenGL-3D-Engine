name: Build and Deploy Engine to Itch.io

on:
  push:
    branches: [ main ] # Trigger on pushes to main branch

jobs:

  # 1. LINUX BUILD JOB

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Dependencies (Linux)
        run: sudo apt-get update && sudo apt-get install -y build-essential libgl-dev

      - name: Configure and Build (Linux)
        # 1. Change directory to where CMakeLists.txt and source files are located
        run: |
          cd "OpenGL 3D Engine"
          cmake -B ../build_linux -DCMAKE_BUILD_TYPE=Release .
          cmake --build ../build_linux --config Release
        
      - name: Package and Push to itch.io (Linux)
        # Using a reliable setup-butler action and running butler via command line
        uses: manleydev/butler-publish-itchio-action@v1.0.3
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          ITCH_USER: mu-gua-here
          ITCH_GAME: opengl-3d-engine-demo
          PACKAGE: build_linux/ # Relative to the workspace root
          CHANNEL: linux
          VERSION: ${{ github.sha }}


  # 2. WINDOWS BUILD JOB

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
            
      - name: Configure and Build (Windows)
        # 1. Change directory to where CMakeLists.txt and source files are located
        run: |
          cd "OpenGL 3D Engine"
          cmake -B ../build_windows -A x64 -DCMAKE_BUILD_TYPE=Release .
          cmake --build ../build_windows --config Release
        
      - name: Package and Push to itch.io (Windows)
        # This action is a container action, but it often works on Windows/Linux
        uses: manleydev/butler-publish-itchio-action@v1.0.3
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          ITCH_USER: mu-gua-here
          ITCH_GAME: opengl-3d-engine-demo
          PACKAGE: build_windows/Release/ # Relative to the workspace root
          CHANNEL: windows
          VERSION: ${{ github.sha }}

  # 3. MACOS BUILD JOB

  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure and Build (macOS)
        # 1. Change directory to where CMakeLists.txt and source files are located
        run: |
          cd "OpenGL 3D Engine"
          cmake -B ../build_macos -G Xcode -DCMAKE_BUILD_TYPE=Release .
          cmake --build ../build_macos --config Release
        
      - name: Create ZIP Package
        # Note: We use the directory relative to the repository root for the zip command
        run: zip -r OpenGL-3D-Engine.zip build_macos/Release/
        
      - name: Setup Butler
        # FIX: Use a non-container action to install butler on macOS
        uses: jdno/setup-butler@v1
      
      - name: Push to itch.io (macOS)
        # FIX: Run butler using a standard command step
        run: butler push OpenGL-3D-Engine.zip mu-gua-here/opengl-3d-engine-demo:osx --userversion ${{ github.sha }}
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
